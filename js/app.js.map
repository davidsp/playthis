{"version":3,"file":"build\\js\\app.js","sources":["app/lib/conf.js","app/main.js","app/modules/remoteUtils.js","app/routers/main-router.js","app/views/basic-view.js","app/views/playlist-view.js","app/views/templates/basic-search.jst","app/views/templates/error-message.jst","app/views/templates/pagination.jst","app/views/templates/video-item.jst","app/views/templates/videos-list.jst","app/views/video-view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;A","sourcesContent":["var conf = {\r\n    'urls' :{\r\n        searchUrl: 'https://www.googleapis.com/youtube/v3/search?q={searchTerm}&type=video&key={userId}&maxResults={resultsPerPage}&order=relevance&part=snippet',\r\n        videoUrl: 'https://www.googleapis.com/youtube/v3/videos?id={videoId}&key={userId}&maxResults=1&order=relevance&part=snippet',\r\n    },\r\n    values :{\r\n        userId: 'AIzaSyC532b2yg91QfoCd2LFibEQj6_5nnBsqjA',\r\n        itemsPerPage: 36\r\n    },\r\n    labels :{\r\n\r\n    }\r\n}\r\nmodule.exports = conf;\r\n","\r\nvar mainRouter = require('routers/main-router');\r\n\r\nmodule.exports = $(function() {\r\n    app = new mainRouter();\r\n    Backbone.history.start({pushState: false});\r\n});","var remoteUtils = {\r\n    getDataJson : function(url,success){\r\n        $.ajax({\r\n            url: url,\r\n            type: 'POST',\r\n            dataType: 'jsonp',\r\n            success: function(data, textStatus, xhr) {\r\n                success(data);                \r\n            }\r\n        });\r\n    }\r\n}\r\nmodule.exports = remoteUtils;","var List = require('views/playlist-view');\r\nvar Video = require('views/video-view');\r\nvar BasicView = require('views/basic-view');\r\n\r\n\r\n\r\nvar PlayListRouter = Backbone.Router.extend({\r\n\r\n    routes: {\r\n        //takes the query and does a youtube search\r\n        \"list/:query\": \"loadList\",\r\n        \"list/:query/:token\": \"loadPaged\",\r\n\r\n        //takes the id of the video and returns the json data of the video itself\r\n        \"video/:id\": \"loadVideo\",\r\n    },\r\n\r\n    initialize: function () {\r\n        this.getBasicView();\r\n    },\r\n\r\n    getBasicView: function () {\r\n        if (!this.basicView) {\r\n            this.basicView = new BasicView({});\r\n        }\r\n        return this.basicView;\r\n    },\r\n    \r\n    getListView: function () {\r\n        if (!this.listView) {\r\n            this.listView = new List({});\r\n        }\r\n        return this.listView;\r\n    },\r\n    getVideoView: function () {\r\n        if (!this.videoView) {\r\n            this.videoView = new Video({});\r\n        }\r\n        return this.videoView;\r\n    },\r\n    \r\n    loadList: function(query){\r\n        this.getListView().show(query);\r\n    },\r\n    loadPaged: function(query, page){\r\n        this.getListView().show(query,page);\r\n    },\r\n    loadVideo: function(id) {\r\n        this.getVideoView().show(id);\r\n    }\r\n});\r\n\r\nmodule.exports = PlayListRouter;","\r\nvar BasicView = Backbone.View.extend({\r\n    el: '#search-form',\r\n    template: require('views/templates/basic-search'),\r\n    events : {\r\n        'submit #search-form' : 'searchVideos'\r\n    },\r\n    initialize: function() {\r\n        this.render();\r\n    },\r\n    render: function() {\r\n        this.$el.html(this.template({}));\r\n        return this;        \r\n    },\r\n    searchVideos: function(e) {\r\n        var value = $(e.target).find('input').val();\r\n        app.navigate(\"list/\" + value, true);\r\n        e.preventDefault();\r\n    }\r\n});\r\n\r\nmodule.exports = BasicView;","\r\nvar Utils = require('modules/remoteUtils');\r\nvar conf = require('lib/conf');\r\n\r\nBackbone.View.prototype.close = function () {\r\n    if (this.beforeClose) {\r\n        this.beforeClose();\r\n    }\r\n    this.remove();\r\n    this.unbind();\r\n};\r\nvar PlayListView = Backbone.View.extend({\r\n    el: '#info',\r\n    template: require('views/templates/videos-list'),\r\n    events: {\r\n        'click .video-link' : 'loadVideo',\r\n        'click .search-btn' : 'goToPaginated'\r\n    },\r\n    initialize: function(opts) {\r\n        //call functions here to prepare the interface\r\n    },\r\n    show:function(query,page) {\r\n        this.term = query;\r\n        var url = conf.urls.searchUrl;\r\n        url = url.replace('{searchTerm}', query);\r\n        url = url.replace('{userId}', conf.values.userId);\r\n        url = url.replace('{resultsPerPage}', conf.values.itemsPerPage);\r\n        if(page) url += '&pageToken=' + page;        \r\n        Utils.getDataJson(url,_.bind(this.postJson, this));\r\n    },\r\n    postJson: function(data){\r\n        this.model = data;\r\n        this.results = this.model.items;\r\n        this.pPageToken = this.model.prevPageToken;\r\n        this.nPageToken = this.model.nextPageToken;\r\n        this.renderData();\r\n        if(this.pPageToken || this.nPageToken) this.addPagination();\r\n    },    \r\n    renderData: function() {\r\n        $('#info').html(this.template({\r\n            items: this.results,    \r\n            totalItems: null,\r\n            url: this.term\r\n        }));\r\n        return this;        \r\n    },\r\n    addPagination: function(){\r\n        var tpl = require('views/templates/pagination');\r\n        $('#info').find('.pagination-wrap').html(tpl({\r\n            prevToken: this.pPageToken,\r\n            nextToken: this.nPageToken\r\n        }));\r\n    },\r\n    goToPaginated: function(e){\r\n        var token = $(e.currentTarget).attr('data-token');\r\n        app.navigate(\"list/\" + this.term + '/' + token, {trigger: true});\r\n        e.stopImmediatePropagation();\r\n    }\r\n});\r\n\r\nmodule.exports = PlayListView;","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<form id=\"search-form\" class=\"row form-inline\">\\r\\n    <div class=\"form-group col-md-8 col-xs-12 col-md-offset-2 input-group\">\\r\\n        <input type=\"text\" id=\"input-search\" class=\"form-control\" placeholder=\"Search for something\">\\r\\n        <button class=\"btn btn-primary btn-small span12\">GO</button>\\r\\n    </div>        \\r\\n</form>\\r\\n';\n}\nreturn __p;\n};","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<p>error message</p>';\n}\nreturn __p;\n};","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<ul class=\"list-unstyled\">\\r\\n    ';\n if(prevToken) { \n__p+='\\r\\n    <li class=\"pull-left\">\\r\\n        <ul class=\"pagination\">\\r\\n            <li class=\"first-page\" data-page=\"1\">\\r\\n                <a class=\"search-btn\" data-token=\"'+\n((__t=(prevToken))==null?'':__t)+\n'\"><i class=\"glyphicon glyphicon-chevron-left\"></i></a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </li>\\r\\n    ';\n } \n__p+='\\r\\n    ';\n if(nextToken) { \n__p+='\\r\\n    <li class=\"pull-right\">\\r\\n        <ul  class=\"pagination\">\\r\\n            <li class=\"next-page\"><a class=\"search-btn\" data-token=\"'+\n((__t=(nextToken))==null?'':__t)+\n'\"><i class=\"glyphicon glyphicon-chevron-right\"></i></a></li>\\r\\n        </ul>\\r\\n    </li>\\r\\n    ';\n } \n__p+='\\r\\n</ul>\\r\\n\\r\\n<p></p>';\n}\nreturn __p;\n};","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"row\">\\r\\n    <div id=\"video-player\" class=\"col-sm-offset-1 col-md-offset-2 col-xs-12 col-sm-10 col-md-8\">\\r\\n        <p id=\"back-to-results\">\\r\\n            <a class=\"btn-back-to-results btn btn-success btn-xs\"><i class=\"glyphicon glyphicon-chevron-left with-icon\"></i>Back to the search results</a>\\r\\n        </p>\\r\\n        <h3>'+\n((__t=(title))==null?'':__t)+\n'</h3>\\r\\n        <iframe src=\"//www.youtube.com/embed/'+\n((__t=(id))==null?'':__t)+\n'\" frameborder=\"0\" allowfullscreen></iframe>\\r\\n    </div>\\r\\n</div>';\n}\nreturn __p;\n};","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div id=\"list-videos\">\\r\\n<h3><strong>'+\n((__t=(totalItems ))==null?'':__t)+\n'</strong> results after searching for <strong>'+\n((__t=(url))==null?'':__t)+\n'</strong></h3>\\r\\n<nav class=\"pagination-wrap\"></nav>\\r\\n<section class=\"row list-items\">\\r\\n';\n \r\nvar results = items;\r\nfor( var i in results) { \n__p+='\\r\\n    <div class=\"col-xs-12 col-sm-6 col-md-3\">\\r\\n        <p><a href=\"#video/'+\n((__t=(results[i].id.videoId))==null?'':__t)+\n'\" class=\"video-link\"><img src=\"'+\n((__t=( results[i].snippet.thumbnails.high.url ))==null?'':__t)+\n'\"></a></p>\\r\\n        <p><a href=\"#video/'+\n((__t=(results[i].id.videoId))==null?'':__t)+\n'\" class=\"video-link\">'+\n((__t=( results[i].snippet.title ))==null?'':__t)+\n'</a></p>\\r\\n    </div>\\r\\n';\n } \n__p+='\\r\\n</section>\\r\\n<nav class=\"pagination-wrap\"></nav>    \\r\\n</div>';\n}\nreturn __p;\n};","\r\nvar Utils = require('modules/remoteUtils');\r\nvar conf = require('lib/conf');\r\n\r\nvar PlayListView = Backbone.View.extend({\r\n    el: '#info',\r\n    template: require('views/templates/video-item'),\r\n    events: {\r\n        'click .btn-back-to-results' : 'goToResults'\r\n    },\r\n    initialize: function(opts) {\r\n    },\r\n    show: function(id) {\r\n        var url = conf.urls.videoUrl;\r\n        url = url.replace('{videoId}', id);\r\n        url = url.replace('{userId}', conf.values.userId);\r\n        Utils.getDataJson(url,_.bind(this.postJson, this));        \r\n    },\r\n    postJson: function(data){\r\n        this.model = data;        \r\n        this.id = this.model.items[0].id;\r\n        this.title = this.model.items[0].snippet.title;\r\n        this.render();\r\n    },\r\n    render: function() {\r\n        this.$el.html(this.template({\r\n            id: this.id,\r\n            title: this.title\r\n        }));\r\n        return this;        \r\n    },\r\n    goToResults: function(e) {\r\n        Backbone.history.history.back();\r\n    }\r\n});\r\n\r\nmodule.exports = PlayListView;"]}